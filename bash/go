#!/bin/bash

#################################################
# Created by: NitrateOrigins                    #
# GitHub: https://www.github.com/NitrateOrigins #
# Created for: The Templex Server               #
# GitHub: https://www.github.com/TemplexMC      #
# Thanks for using my script!                   #
#################################################

echo -e "Starting up..."

if [ -z $1 ]; then
        echo -e "Going..."
        screen -rx Vanilla
#       clear
        echo -e "Done."
        exit
fi
if [ $1 = "look" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a string!"
                echo -e "Usage: go look <string> <file>"
                exit
        fi
        if [ -n $2 ]; then
                if [ -z $3 ]; then
                        echo "You need to specify a file!"
                        echo "Usage: go look <string> <file>"
                        exit
                fi
                if [ -n $3 ]; then
                        echo "Looking for '"$2"' in '"$3"'..."
                        grep $2 $3
                        echo "Done looking... Above is what I found..."
                        exit
                fi
        fi
fi
if [ $1 = "f" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a time (in days)!"
                echo -e "Usage: go f <days> <file extention>"
                exit
        fi
        if [ -n $2 ]; then
                if [ -z $3 ]; then
                        echo -e "You need to specify a file extension!"
                        echo -e "Usage: go f <days> <file extention>"
                        exit
                fi
                if [ -n $3 ]; then
                        echo -e "Finding and deleting for "$2" days with "$3"..."
#                       files=0
#                       find . -type f -mtime +$2 -name `*.$3` -exec let "files += 1";
                        find . -type f -mtime +$2 -name '*.'$3 -execdir rm -rfv '{}' \;
#                       echo -e "Count of files in time period: "$files
                        exit
                fi
        fi
fi
if [ $1 = "d" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a screen!"
                echo -e "Usage: go d <screen>"
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Detatching screen "$2"..."
                screen -d $2
                echo -e "Detached screen "$2"."
                exit
        fi
fi
if [ $1 = "tk" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a port!"
                echo -e "Usage: go kt <port>"
                exit
        fi
        if [ -n $2 ]; then
                echo -e "SIGTERM Killing port "$2"..."
                sudo kill -TERM `sudo lsof -t -i :$2`
#               sudo kill -TERM $2
                echo -e "Killed port "$2"."
                exit
        fi
fi
if [ $1 = "kt" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a port!"
                echo -e "Usage: go kt <port>"
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Killing port "$2"..."
                sudo kill -9 `sudo lsof -t -i :$2`
#               sudo kill -9 $2
                echo -e "Killed port "$2"."
                exit
        fi
fi
if [ $1 = "b" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a file!"
                echo -e "Usage: go b <file name>"
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Bashing..."
                chmod 777 $2
                echo -e "Bashed."
                exit
        fi
fi
if [ $1 = "up" ]; then
        echo -e "Updating..."
        sudo apt update
        sudo apt upgrade
        echo -e "Updated."
        exit
fi
if [ $1 = "--" ]; then
        echo -e "Upgrading..."
        sudo apt upgrade
        echo -e "Upgraded."
        exit
fi
if [ $1 = "s" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a screen name!"
                echo -e "Usage: \"go s <screen name>\""
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Starting..."
                screen -R $2
                clear
                echo -e "Done."
                exit
        fi
fi
if [ $1 = "e" ]; then
        if [ -z $2 ]; then
                echo -e "Editting..."
                nano $HOME/bin/go
                clear
                echo -e "Done."
#               ls
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Editting..."
                nano $2
                clear
                echo -e "Done."
#               ls
                exit
        fi
fi
if [ $1 = "k" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a screen name!"
                echo -e "Usage: \"go k <screen name>\""
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Killing..."
                screen -X -S $2 kill
                echo -e "Killed. Listing screens..."
                screen -list
                echo -e "Done."
                exit
        fi
fi
if [ $1 = "?" ]; then
        echo -e "--- List of commands ---"
        echo -e "go     > Goes to the \"Main\" screen."
        echo -e "..."
        exit
fi
if [ $1 = "splice" ]; then
        echo -e "Starting up Splice Engine..."
        splice
        exit
fi
if [ $1 = "." ]; then
# Uncomment following line if you wish for the script to clear the screen before you get your screen list returned.
#       clear
        echo -e "Retrieving..."
        screen -list
        echo -e "Retrieved!"
        echo -e "Done."
        exit
fi
if [ $1 = "m" ]; then
        if [ -z $2 ]; then
                echo -e "You need to specify a directory name!"
                echo -e "Usage: go m <name of directory>"
                exit
        fi
        if [ -n $2 ]; then
                echo -e "Making..."
                mkdir $2
                echo -e "Made!"
                exit
        fi
fi
# -- Goes to screens --
# This must be last.
if [ -n $1 ]; then
        echo -e "Going..."
        screen -rx $1
        clear
        echo -e "Done."
        exit
fi
exit
